# ファイル名: next-chart/templates/migration-job.yaml
# 役割: DBが準備できた「後」で、マイグレーションとシーディングを1回だけ実行する

apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ .Release.Name }}-migrate-seed"
  namespace: {{ .Release.Namespace }}
  annotations:
    # "argocd.argoproj.io/hook": "Sync"
    # せっかちな'PreSync'はやめて、メインの同期作業の一員（'Sync'）になる。
    "argocd.argoproj.io/hook": "Sync"
    # "argocd.argoproj.io/sync-wave": "1"
    # でもな、あんたは『第1陣』や！第0陣のDBチームの仕事が終わってから、現場に行きや！
    "argocd.argoproj.io/sync-wave": "1"
    # 仕事が終わった後の掃除ルールは今まで通りや
    "argocd.argoproj.io/hook-delete-policy": "BeforeHookCreation,HookSucceeded"
spec:
  template:
    spec:
      containers:
      - name: migrator-seeder
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        # ▼▼▼【ここが修正ポイントや！】▼▼▼
        # Prismaに、設計図のありかを '--schema' で直接教えるんや！
        # これで、もうPrismaは迷わんようになるで。
        command:
          - "/bin/sh"
          - "-c"
          - "npx prisma migrate deploy --schema=/app/prisma/schema.prisma && npx prisma db seed"
        # ▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: DATABASE_URL
      restartPolicy: Never
  backoffLimit: 2

